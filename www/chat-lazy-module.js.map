{"version":3,"sources":["./src/addons/mod/chat/pages/chat/chat.html","./src/addons/mod/chat/pages/index/index.html","./src/addons/mod/chat/pages/session-messages/session-messages.html","./src/addons/mod/chat/pages/sessions/sessions.html","./src/addons/mod/chat/chat-lazy.module.ts","./src/addons/mod/chat/pages/chat/chat.scss","./src/addons/mod/chat/pages/chat/chat.ts","./src/addons/mod/chat/pages/index/index.ts","./src/addons/mod/chat/pages/session-messages/session-messages.scss","./src/addons/mod/chat/pages/session-messages/session-messages.ts","./src/addons/mod/chat/pages/sessions/sessions.ts"],"names":[],"mappings":"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","file":"chat-lazy-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>\\n            <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\n            </core-format-text>\\n        </h1>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" *ngIf=\\\"loaded\\\" (click)=\\\"showChatUsers()\\\" [attr.aria-label]=\\\"'core.users' | translate\\\">\\n                <ion-icon name=\\\"fas-users\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"has-footer\\\">\\n    <core-loading [hideUntil]=\\\"loaded\\\" class=\\\"safe-area-page\\\">\\n        <ion-list class=\\\"addon-messages-discussion-container\\\" aria-live=\\\"polite\\\">\\n            <ng-container *ngFor=\\\"let message of messages; index as index; last as last\\\">\\n\\n                <p class=\\\"ion-text-center addon-messages-date\\\" *ngIf=\\\"message.showDate\\\">\\n                    {{ message.timestamp * 1000 | coreFormatDate: \\\"strftimedayshort\\\" }}\\n                </p>\\n\\n                <div class=\\\"ion-text-center addon-mod_chat-notice\\\" *ngIf=\\\"message.special\\\">\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"success\\\" *ngIf=\\\"message.system && message.message == 'enter'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-sign-in-alt\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageenter' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"danger\\\" *ngIf=\\\"message.system && message.message == 'exit'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-sign-out-alt\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageexit' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"primary\\\" *ngIf=\\\"message.beep == 'all'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messagebeepseveryone' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"primary\\\"\\n                        *ngIf=\\\"message.userid != currentUserId && message.beep == currentUserId\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messagebeepsyou' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"light\\\"\\n                        *ngIf=\\\"message.userid == currentUserId && message.beep && message.beep != 'all'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageyoubeep' | translate:{$a: message.beepWho} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"info\\\" *ngIf=\\\"!message.system && !message.beep\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-asterisk\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            <strong>\\n                                {{ message.userfullname }} <core-format-text [text]=\\\"message.message\\\" contextLevel=\\\"module\\\"\\n                                [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\" (afterRender)=\\\"last && scrollToBottom()\\\">\\n                                </core-format-text>\\n                            </strong>\\n                        </span>\\n                    </ion-badge>\\n                </div>\\n\\n                <ion-item *ngIf=\\\"!message.special\\\" class=\\\"ion-text-wrap addon-message\\\"\\n                    [class.addon-message-mine]=\\\"message.userid == currentUserId\\\"\\n                    [class.addon-message-not-mine]=\\\"message.userid != currentUserId\\\"\\n                    [class.addon-message-no-user]=\\\"!message.showUserData\\\"\\n                    [@coreSlideInOut]=\\\"message.userid == currentUserId ? '' : 'fromLeft'\\\">\\n                    <ion-label>\\n                        <!-- User data. -->\\n                        <h2 class=\\\"addon-message-user\\\" *ngIf=\\\"message.showUserData\\\">\\n                            <core-user-avatar slot=\\\"start\\\" [user]=\\\"message\\\" [linkProfile]=\\\"false\\\">\\n                            </core-user-avatar>\\n                            <div>{{ message.userfullname }}</div>\\n                        </h2>\\n\\n                        <p class=\\\"addon-message-text\\\">\\n                            <core-format-text [text]=\\\"message.message\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\"\\n                                [courseId]=\\\"courseId\\\" (afterRender)=\\\"last && scrollToBottom()\\\">\\n                            </core-format-text>\\n                        </p>\\n                    </ion-label>\\n                    <ion-note>{{ message.timestamp * 1000 | coreFormatDate: \\\"strftimetime\\\" }}</ion-note>\\n                    <div class=\\\"tail\\\" *ngIf=\\\"message.showTail\\\"></div>\\n                </ion-item>\\n            </ng-container>\\n        </ion-list>\\n\\n        <core-empty-box *ngIf=\\\"!messages || messages.length <= 0\\\" icon=\\\"far-comments\\\"\\n            [message]=\\\"'addon.mod_chat.nomessages' | translate\\\">\\n        </core-empty-box>\\n    </core-loading>\\n</ion-content>\\n<ion-footer color=\\\"light\\\" class=\\\"footer-adjustable\\\">\\n    <ion-toolbar color=\\\"light\\\">\\n        <p class=\\\"ion-text-center\\\" *ngIf=\\\"!isOnline\\\">\\n            {{ 'addon.mod_chat.mustbeonlinetosendmessages' | translate }}\\n        </p>\\n\\n        <core-send-message-form [sendDisabled]=\\\"sending\\\" *ngIf=\\\"isOnline && polling && loaded\\\" [message]=\\\"newMessage\\\"\\n            (onSubmit)=\\\"sendMessage($event)\\\" [placeholder]=\\\"'addon.messages.newmessage' | translate\\\" (onResize)=\\\"resizeContent()\\\">\\n        </core-send-message-form>\\n\\n        <ion-button *ngIf=\\\"isOnline && !polling && loaded\\\" (click)=\\\"reconnect()\\\" expand=\\\"block\\\" color=\\\"light\\\">\\n            {{ 'core.login.reconnect' | translate }}\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-footer>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>\\n            <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"module?.id\\\" [courseId]=\\\"courseId\\\">\\n            </core-format-text>\\n        </h1>\\n        <ion-buttons slot=\\\"end\\\">\\n            <!-- The buttons defined by the component will be added in here. -->\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!activityComponent?.loaded\\\" (ionRefresh)=\\\"activityComponent?.doRefresh($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n\\n    <addon-mod-chat-index [module]=\\\"module\\\" [courseId]=\\\"courseId\\\" (dataRetrieved)=\\\"updateData($event)\\\"></addon-mod-chat-index>\\n</ion-content>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ 'addon.mod_chat.messages' | translate }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshMessages($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"loaded\\\" class=\\\"safe-area-page\\\">\\n        <ion-list class=\\\"addon-messages-discussion-container\\\">\\n            <ng-container *ngFor=\\\"let message of messages; index as index;\\\">\\n\\n                <div class=\\\"ion-text-center addon-messages-date\\\" *ngIf=\\\"message.showDate\\\">\\n                    {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimedayshort\\\" }}\\n                </div>\\n\\n                <div class=\\\"ion-text-center addon-mod_chat-notice\\\" *ngIf=\\\"message.special\\\">\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"success\\\" *ngIf=\\\"message.issystem && message.message == 'enter'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-sign-in-alt\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageenter' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"danger\\\" *ngIf=\\\"message.issystem && message.message == 'exit'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-sign-out-alt\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageexit' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"primary\\\" *ngIf=\\\"message.beep == 'all'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messagebeepseveryone' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"primary\\\"\\n                        *ngIf=\\\"message.userid != currentUserId && message.beep == currentUserId\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messagebeepsyou' | translate:{$a: message.userfullname} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"light\\\"\\n                        *ngIf=\\\"message.userid == currentUserId && message.beep && message.beep != 'all'\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-bell\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            {{ 'addon.mod_chat.messageyoubeep' | translate:{$a: message.beepWho} }}\\n                        </span>\\n                    </ion-badge>\\n\\n                    <ion-badge class=\\\"ion-text-wrap\\\" color=\\\"info\\\" *ngIf=\\\"!message.issystem && !message.beep\\\">\\n                        <span>\\n                            <ion-icon name=\\\"fas-asterisk\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                            {{ message.timestamp * 1000 | coreFormatDate:\\\"strftimetime\\\" }}\\n                            <strong>\\n                                {{ message.userfullname }} <core-format-text [text]=\\\"message.message\\\" contextLevel=\\\"module\\\"\\n                                [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\"></core-format-text>\\n                            </strong>\\n                        </span>\\n                    </ion-badge>\\n                </div>\\n\\n                <ion-item *ngIf=\\\"!message.special\\\" class=\\\"ion-text-wrap addon-message\\\"\\n                    [class.addon-message-mine]=\\\"message.userid == currentUserId\\\"\\n                    [class.addon-message-not-mine]=\\\"message.userid != currentUserId\\\"\\n                    [class.addon-message-no-user]=\\\"!message.showUserData\\\">\\n                    <ion-label>\\n                        <!-- User data. -->\\n                        <h2 class=\\\"addon-message-user\\\">\\n                            <core-user-avatar slot=\\\"start\\\" [user]=\\\"message\\\" [linkProfile]=\\\"false\\\" *ngIf=\\\"message.showUserData\\\">\\n                            </core-user-avatar>\\n                            <div *ngIf=\\\"message.showUserData\\\">{{ message.userfullname }}</div>\\n                        </h2>\\n\\n                        <p class=\\\"addon-message-text\\\">\\n                            <core-format-text [text]=\\\"message.message\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\"\\n                                [courseId]=\\\"courseId\\\">\\n                            </core-format-text>\\n                        </p>\\n                        <ion-note>{{ message.timestamp * 1000 | coreFormatDate: \\\"strftimetime\\\" }}</ion-note>\\n                    </ion-label>\\n                    <div class=\\\"tail\\\" *ngIf=\\\"message.showTail\\\"></div>\\n                </ion-item>\\n            </ng-container>\\n        </ion-list>\\n    </core-loading>\\n</ion-content>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <h1>{{ 'addon.mod_chat.chatreport' | translate }}</h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <core-split-view>\\n        <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!sessions.loaded\\\" (ionRefresh)=\\\"refreshSessions($event.target)\\\">\\n            <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n        </ion-refresher>\\n        <core-loading [hideUntil]=\\\"sessions.loaded\\\">\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"groupInfo && (groupInfo.separateGroups || groupInfo.visibleGroups)\\\">\\n                <ion-label id=\\\"addon-chat-groupslabel\\\">\\n                    <ng-container *ngIf=\\\"groupInfo.separateGroups\\\">{{'core.groupsseparate' | translate }}</ng-container>\\n                    <ng-container *ngIf=\\\"groupInfo.visibleGroups\\\">{{'core.groupsvisible' | translate }}</ng-container>\\n                </ion-label>\\n                <ion-select [(ngModel)]=\\\"groupId\\\" (ionChange)=\\\"fetchSessions(true)\\\" aria-labelledby=\\\"addon-chat-groupslabel\\\"\\n                    interface=\\\"action-sheet\\\" [interfaceOptions]=\\\"{header: 'core.group' | translate}\\\">\\n                    <ion-select-option *ngFor=\\\"let groupOpt of groupInfo.groups\\\" [value]=\\\"groupOpt.id\\\">\\n                        {{groupOpt.name}}\\n                    </ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label>{{ 'addon.mod_chat.showincompletesessions' | translate }}</ion-label>\\n                <ion-toggle [(ngModel)]=\\\"showAll\\\" (ionChange)=\\\"fetchSessions(true)\\\"></ion-toggle>\\n            </ion-item>\\n\\n            <ion-card *ngFor=\\\"let session of sessions.items\\\" (click)=\\\"sessions.select(session)\\\" button\\n                [attr.aria-current]=\\\"sessions.getItemAriaCurrent(session)\\\"\\n                [class.addon-mod-chat-session-show-more]=\\\"session.sessionusers.length < session.allsessionusers.length\\\">\\n\\n                <ion-item class=\\\"ion-text-wrap\\\">\\n                    <ion-label>\\n                        <p class=\\\"item-heading\\\">{{ session.sessionstart * 1000 | coreFormatDate }}</p>\\n                        <p *ngIf=\\\"session.duration\\\">{{ session.duration | coreDuration }}</p>\\n                    </ion-label>\\n                </ion-item>\\n                <ion-card-content>\\n                    <ion-item *ngFor=\\\"let user of session.sessionusers\\\">\\n                        <ion-label>\\n                            {{ user.userfullname }} <span *ngIf=\\\"user.messagecount\\\">({{ user.messagecount }})</span>\\n                        </ion-label>\\n                    </ion-item>\\n                </ion-card-content>\\n                <ion-button *ngIf=\\\"session.sessionusers.length < session.allsessionusers.length\\\" fill=\\\"clear\\\" expand=\\\"block\\\"\\n                    (click)=\\\"showMoreUsers(session, $event)\\\">\\n                    {{ 'core.showmore' | translate }}\\n                </ion-button>\\n            </ion-card>\\n\\n            <core-empty-box *ngIf=\\\"sessions.empty\\\" icon=\\\"far-comments\\\" [message]=\\\"'addon.mod_chat.nosessionsfound' | translate\\\">\\n            </core-empty-box>\\n        </core-loading>\\n    </core-split-view>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModChatComponentsModule } from './components/components.module';\nimport { AddonModChatIndexPage } from './pages/index/index';\nimport { AddonModChatChatPage } from './pages/chat/chat';\nimport { AddonModChatSessionMessagesPage } from './pages/session-messages/session-messages';\nimport { CoreScreen } from '@services/screen';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { AddonModChatSessionsPage } from './pages/sessions/sessions';\nimport { CanLeaveGuard } from '@guards/can-leave';\n\nconst commonRoutes: Routes = [\n    {\n        path: ':courseId/:cmId',\n        component: AddonModChatIndexPage,\n    },\n    {\n        path: ':courseId/:cmId/chat',\n        component: AddonModChatChatPage,\n        canDeactivate: [CanLeaveGuard],\n    },\n];\n\nconst mobileRoutes: Routes = [\n    ...commonRoutes,\n    {\n        path: ':courseId/:cmId/sessions',\n        component: AddonModChatSessionsPage,\n    },\n    {\n        path: ':courseId/:cmId/sessions/:sessionStart/:sessionEnd',\n        component: AddonModChatSessionMessagesPage,\n    },\n];\n\nconst tabletRoutes: Routes = [\n    ...commonRoutes,\n    {\n        path: ':courseId/:cmId/sessions',\n        component: AddonModChatSessionsPage,\n        children: [\n            {\n                path: ':sessionStart/:sessionEnd',\n                component: AddonModChatSessionMessagesPage,\n            },\n        ],\n    },\n];\n\nconst routes: Routes = [\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        AddonModChatComponentsModule,\n    ],\n    declarations: [\n        AddonModChatIndexPage,\n        AddonModChatChatPage,\n        AddonModChatSessionsPage,\n        AddonModChatSessionMessagesPage,\n    ],\n})\nexport class AddonModChatLazyModule {}\n","export default \"/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/*\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/*\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n * Extracted from ionic.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host ion-content {\\n  --background: var(--background-alternative);\\n}\\n:host ion-content::part(scroll) {\\n  padding-bottom: 0 !important;\\n}\\n:host .addon-messages-discussion-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding-bottom: 15px;\\n  background: var(--background-alternative);\\n}\\n:host .addon-messages-date {\\n  font-weight: normal;\\n  font-size: 0.9rem;\\n}\\n:host ion-item.addon-message {\\n  border: 0;\\n  border-radius: 4px;\\n  padding: 0 8px 0 8px;\\n  margin: 10px 8px 0 8px;\\n  --background: var(--addon-messages-message-bg);\\n  background: var(--background);\\n  align-self: flex-start;\\n  width: 90%;\\n  max-width: 90%;\\n  --min-height: var(--a11y-min-target-size);\\n  position: relative;\\n  transition: width 500ms ease-in-out;\\n  overflow: visible;\\n}\\n:host ion-item.addon-message::part(native) {\\n  --inner-border-width: 0;\\n  --inner-padding-end: 0;\\n  padding: 0;\\n  margin: 0;\\n}\\n:host ion-item.addon-message core-format-text > p:only-child {\\n  display: inline;\\n}\\n:host ion-item.addon-message .addon-message-user {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 0.5rem;\\n  margin-top: 0;\\n  color: var(--ion-text-color);\\n}\\n:host ion-item.addon-message .addon-message-user core-user-avatar {\\n  display: block;\\n  --core-avatar-size: var(--addon-messages-avatar-size);\\n  margin: 0;\\n}\\n:host ion-item.addon-message .addon-message-user div {\\n  font-weight: 500;\\n  flex-grow: 1;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message .addon-message-user div {\\n    padding-left: unset;\\n    padding-right: unset;\\n    -webkit-padding-start: 0.5rem;\\n    padding-inline-start: 0.5rem;\\n    -webkit-padding-end: 0.5rem;\\n    padding-inline-end: 0.5rem;\\n  }\\n}\\n:host ion-item.addon-message ion-note {\\n  color: var(--addon-messages-message-note-text);\\n  font-size: var(--addon-messages-message-note-font-size);\\n  margin: 0;\\n  padding: 0 0 8px 0;\\n  align-self: flex-end;\\n}\\n:host ion-item.addon-message[tappable]:active {\\n  --background: var(--addon-messages-message-activated-bg);\\n}\\n:host ion-item.addon-message ion-label {\\n  margin: 0;\\n  padding: 8px 0;\\n}\\n:host ion-item.addon-message .addon-message-text {\\n  display: inline-flex;\\n}\\n:host ion-item.addon-message .addon-message-text * {\\n  color: var(--ion-text-color);\\n}\\n:host ion-item.addon-message .tail {\\n  content: \\\"\\\";\\n  width: 0;\\n  height: 0;\\n  border: 0.5rem solid transparent;\\n  position: absolute;\\n  touch-action: none;\\n  bottom: 0;\\n}\\n:host ion-item.addon-message.addon-message-mine {\\n  --background: var(--addon-messages-message-mine-bg);\\n  align-self: flex-end;\\n}\\n:host ion-item.addon-message.addon-message-mine[tappable]:active {\\n  --background: var(--addon-messages-message-mine-activated-bg);\\n}\\n:host ion-item.addon-message.addon-message-mine .spinner {\\n  float: right;\\n  margin-left: 5px;\\n  margin-right: -3px;\\n  margin-top: 2px;\\n  margin-bottom: -2px;\\n}\\n[dir=rtl] :host ion-item.addon-message.addon-message-mine .spinner {\\n  float: left;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message.addon-message-mine .spinner {\\n    margin-left: unset;\\n    margin-right: unset;\\n    -webkit-margin-start: 5px;\\n    margin-inline-start: 5px;\\n    -webkit-margin-end: -3px;\\n    margin-inline-end: -3px;\\n  }\\n}\\n:host ion-item.addon-message.addon-message-mine .spinner svg {\\n  width: 16px;\\n  height: 16px;\\n}\\n:host ion-item.addon-message.addon-message-mine .tail {\\n  right: -8px;\\n  margin-right: -0.5rem;\\n  border-bottom-color: var(--addon-messages-message-mine-bg);\\n}\\n[dir=rtl] :host ion-item.addon-message.addon-message-mine .tail {\\n  left: unset;\\n  right: unset;\\n  left: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message.addon-message-mine .tail {\\n    margin-right: unset;\\n    -webkit-margin-end: -0.5rem;\\n    margin-inline-end: -0.5rem;\\n  }\\n}\\n:host ion-item.addon-message.addon-message-mine[tappable]:active .tail {\\n  border-bottom-color: var(--addon-messages-message-mine-activated-bg);\\n}\\n:host ion-item.addon-message.addon-message-not-mine .tail {\\n  border-bottom-color: var(--addon-messages-message-bg);\\n  left: -8px;\\n  margin-left: -0.5rem;\\n}\\n[dir=rtl] :host ion-item.addon-message.addon-message-not-mine .tail {\\n  left: unset;\\n  right: unset;\\n  right: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message.addon-message-not-mine .tail {\\n    margin-left: unset;\\n    -webkit-margin-start: -0.5rem;\\n    margin-inline-start: -0.5rem;\\n  }\\n}\\n:host ion-item.addon-message[tappable].addon-message-not-mine.activated .tail {\\n  border-bottom-color: var(--addon-messages-message-activated-bg);\\n}\\n:host ion-item.addon-message .addon-messages-delete-button {\\n  min-height: initial;\\n  line-height: initial;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  height: var(--a11y-min-target-size) !important;\\n  align-self: flex-end;\\n}\\n:host ion-item.addon-message .addon-messages-delete-button ion-icon {\\n  font-size: 1.4em;\\n  line-height: initial;\\n  color: var(--ion-color-danger);\\n}\\n:host ion-item.addon-message.addon-message-no-user {\\n  margin-top: 8px;\\n}\\n:host ion-item.addon-message.addon-message-mine + ion-item.addon-message.addon-message-no-user.addon-message-mine,\\n:host ion-item.addon-message.addon-message-not-mine + ion-item.addon-message.addon-message-no-user.addon-message-not-mine {\\n  padding-top: 0;\\n}\\n:host ion-item.addon-message.addon-message-mine + ion-item.addon-message.addon-message-no-user.addon-message-mine .item-heading,\\n:host ion-item.addon-message.addon-message-not-mine + ion-item.addon-message.addon-message-no-user.addon-message-not-mine .item-heading {\\n  margin-bottom: 0;\\n}\\n:host-context(.ios) ion-footer .toolbar:last-child {\\n  padding-bottom: 4px;\\n  min-height: 0;\\n}\\n:host .addon-mod_chat-notice {\\n  margin-top: 8px;\\n  margin-bottom: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport { CoreAnimations } from '@components/animations';\nimport { CoreSendMessageFormComponent } from '@components/send-message-form/send-message-form';\nimport { CanLeave } from '@guards/can-leave';\nimport { IonContent } from '@ionic/angular';\nimport { CoreApp } from '@services/app';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Network, NgZone, Translate } from '@singletons';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { Subscription } from 'rxjs';\nimport { AddonModChatUsersModalComponent, AddonModChatUsersModalResult } from '../../components/users-modal/users-modal';\nimport { AddonModChat, AddonModChatProvider, AddonModChatUser } from '../../services/chat';\nimport { AddonModChatFormattedMessage, AddonModChatHelper } from '../../services/chat-helper';\n\n/**\n * Page that displays a chat session.\n */\n@Component({\n    selector: 'page-addon-mod-chat-chat',\n    templateUrl: 'chat.html',\n    animations: [CoreAnimations.SLIDE_IN_OUT],\n    styleUrls: ['chat.scss'],\n})\nexport class AddonModChatChatPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild(IonContent) content?: IonContent;\n    @ViewChild(CoreSendMessageFormComponent) sendMessageForm?: CoreSendMessageFormComponent;\n\n    loaded = false;\n    title = '';\n    messages: AddonModChatFormattedMessage[] = [];\n    newMessage?: string;\n    polling?: number;\n    isOnline: boolean;\n    currentUserId: number;\n    sending = false;\n    courseId!: number;\n    cmId!: number;\n\n    protected chatId!: number;\n    protected sessionId?: string;\n    protected lastTime = 0;\n    protected oldContentHeight = 0;\n    protected onlineSubscription: Subscription;\n    protected keyboardObserver: CoreEventObserver;\n    protected viewDestroyed = false;\n    protected pollingRunning = false;\n    protected users: AddonModChatUser[] = [];\n\n    constructor() {\n        this.currentUserId = CoreSites.getCurrentSiteUserId();\n        this.isOnline = CoreApp.isOnline();\n        this.onlineSubscription = Network.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreApp.isOnline();\n            });\n        });\n\n        // Recalculate footer position when keyboard is shown or hidden.\n        this.keyboardObserver = CoreEvents.on(CoreEvents.KEYBOARD_CHANGE, () => {\n            // @todo probably not needed.\n            // this.content.resize();\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId')!;\n        this.chatId = CoreNavigator.getRouteNumberParam('chatId')!;\n        this.title = CoreNavigator.getRouteParam('title') || '';\n\n        try {\n            await this.loginUser();\n\n            await this.fetchMessages();\n\n            this.startPolling();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_chat.errorwhileconnecting', true);\n            CoreNavigator.back();\n        } finally {\n            this.loaded = true;\n        }\n\n    }\n\n    /**\n     * Runs when the page has fully entered and is now the active page.\n     * This event will fire, whether it was the first load or a cached page.\n     */\n    ionViewDidEnter(): void {\n        this.startPolling();\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'chat' });\n        this.stopPolling();\n    }\n\n    /**\n     * Convenience function to login the user.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loginUser(): Promise<void> {\n        this.sessionId = await AddonModChat.loginUser(this.chatId);\n    }\n\n    /**\n     * Convenience function to fetch chat messages.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchMessages(): Promise<void> {\n        const messagesInfo = await AddonModChat.getLatestMessages(this.sessionId!, this.lastTime);\n\n        this.lastTime = messagesInfo.chatnewlasttime || 0;\n\n        const messages = await AddonModChat.getMessagesUserData(messagesInfo.messages, this.courseId);\n\n        if (!messages.length) {\n            // No messages yet, nothing else to do.\n            return;\n        }\n\n        const previousLength = this.messages.length;\n        this.messages = this.messages.concat(messages);\n\n        // Calculate which messages need to display the date or user data.\n        for (let index = previousLength; index < this.messages.length; index++) {\n            const prevMessage = index > 0 ? this.messages[index - 1] : undefined;\n\n            this.messages[index] = AddonModChatHelper.formatMessage(this.currentUserId, this.messages[index], prevMessage);\n\n            const message = this.messages[index];\n\n            if (message.beep && message.beep != String(this.currentUserId)) {\n                this.loadMessageBeepWho(message);\n            }\n        }\n\n        this.messages[this.messages.length - 1].showTail = true;\n\n        // New messages or beeps, scroll to bottom.\n        setTimeout(() => this.scrollToBottom());\n    }\n\n    protected async loadMessageBeepWho(message: AddonModChatFormattedMessage): Promise<void> {\n        message.beepWho = await this.getUserFullname(message.beep!);\n    }\n\n    /**\n     * Display the chat users modal.\n     */\n    async showChatUsers(): Promise<void> {\n        // Create the toc modal.\n        const modalData = await CoreDomUtils.openSideModal<AddonModChatUsersModalResult>({\n            component: AddonModChatUsersModalComponent,\n            componentProps: {\n                sessionId: this.sessionId,\n                cmId: this.cmId,\n            },\n        });\n\n        if (modalData) {\n            if (modalData.talkTo) {\n                this.newMessage = `To ${modalData.talkTo}: ` + (this.sendMessageForm?.message || '');\n            }\n            if (modalData.beepTo) {\n                this.sendMessage('', modalData.beepTo);\n            }\n\n            this.users = modalData.users;\n        }\n    }\n\n    /**\n     * Get the user fullname for a beep.\n     *\n     * @param id User Id before parsing.\n     * @return User fullname.\n     */\n    protected async getUserFullname(id: string): Promise<string> {\n        const idNumber = parseInt(id, 10);\n\n        if (isNaN(idNumber)) {\n            return id;\n        }\n\n        const user = this.users.find((user) => user.id == idNumber);\n\n        if (user) {\n            return user.fullname;\n        }\n\n        try {\n            const data = await AddonModChat.getChatUsers(this.sessionId!, { cmId: this.cmId });\n\n            this.users = data.users;\n            const user = this.users.find((user) => user.id == idNumber);\n\n            if (user) {\n                return user.fullname;\n            }\n\n            return id;\n        } catch (error) {\n            // Ignore errors.\n            return id;\n        }\n    }\n\n    /**\n     * Start the polling to get chat messages periodically.\n     */\n    protected startPolling(): void {\n        // We already have the polling in place.\n        if (this.polling) {\n            return;\n        }\n\n        // Start polling.\n        this.polling = window.setInterval(() => {\n            CoreUtils.ignoreErrors(this.fetchMessagesInterval());\n        }, AddonModChatProvider.POLL_INTERVAL);\n    }\n\n    /**\n     * Stop polling for messages.\n     */\n    protected stopPolling(): void {\n        clearInterval(this.polling);\n        this.polling = undefined;\n    }\n\n    /**\n     * Convenience function to be called every certain time to fetch chat messages.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchMessagesInterval(): Promise<void> {\n        if (!this.isOnline || this.pollingRunning) {\n            // Obviously we cannot check for new messages when the app is offline.\n            return;\n        }\n\n        this.pollingRunning = true;\n\n        try {\n            await this.fetchMessages();\n        } catch {\n            try {\n                // Try to login, it might have failed because the session expired.\n                await this.loginUser();\n\n                await this.fetchMessages();\n            } catch (error) {\n                // Fail again. Stop polling if needed.\n                this.stopPolling();\n                CoreDomUtils.showErrorModalDefault(error, 'addon.mod_chat.errorwhileretrievingmessages', true);\n\n                throw error;\n            }\n        } finally {\n            this.pollingRunning = false;\n        }\n    }\n\n    /**\n     * Send a message to the chat.\n     *\n     * @param text Text of the nessage.\n     * @param beep ID of the user to beep.\n     */\n    async sendMessage(text: string, beep: number = 0): Promise<void> {\n        if (!this.isOnline) {\n            // Silent error, the view should prevent this.\n            return;\n        } else if (beep === 0 && !text.trim()) {\n            // Silent error.\n            return;\n        }\n\n        this.sending = true;\n\n        try {\n            await AddonModChat.sendMessage(this.sessionId!, text, beep);\n\n            // Update messages to show the sent message.\n            CoreUtils.ignoreErrors(this.fetchMessagesInterval());\n        } catch (error) {\n            // Only close the keyboard if an error happens, we want the user to be able to send multiple\n            // messages without the keyboard being closed.\n            CoreApp.closeKeyboard();\n\n            this.newMessage = text;\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_chat.errorwhilesendingmessage', true);\n        } finally {\n            this.sending = false;\n        }\n    }\n\n    /**\n     * Try to reconnect.\n     *\n     * @return Promise resolved when done.\n     */\n    async reconnect(): Promise<void> {\n        const modal = await CoreDomUtils.showModalLoading();\n\n        try {\n            // Call startPolling would take a while for the first execution, so we'll execute it manually to check if it works now.\n            await this.fetchMessagesInterval();\n\n            // It works, start the polling again.\n            this.startPolling();\n        } catch {\n            // Ignore errors.\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Scroll bottom when render has finished.\n     */\n    scrollToBottom(): void {\n        // Need a timeout to leave time to the view to be rendered.\n        setTimeout(() => {\n            if (!this.viewDestroyed) {\n                this.content?.scrollToBottom();\n            }\n        });\n    }\n\n    /**\n     * Content or scroll has been resized. For content, only call it if it's been added on top.\n     */\n    resizeContent(): void {\n        // @todo probably not needed.\n        // let top = this.content.getContentDimensions().scrollTop;\n        // this.content.resize();\n\n        // // Wait for new content height to be calculated.\n        // setTimeout(() => {\n        //     // Visible content size changed, maintain the bottom position.\n        //     if (!this.viewDestroyed && this.content && this.domUtils.getContentHeight(this.content) != this.oldContentHeight) {\n        //         if (!top) {\n        //             top = this.content.getContentDimensions().scrollTop;\n        //         }\n\n        //         top += this.oldContentHeight - this.domUtils.getContentHeight(this.content);\n        //         this.oldContentHeight = this.domUtils.getContentHeight(this.content);\n\n        //         this.content.scrollTo(0, top, 0);\n        //     }\n        // });\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return Resolved with true if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (! this.messages.some((message) => !message.special)) {\n            return true;\n        }\n\n        // Modified, confirm user wants to go back.\n        await CoreDomUtils.showConfirm(Translate.instant('addon.mod_chat.confirmloss'));\n\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.onlineSubscription && this.onlineSubscription.unsubscribe();\n        this.keyboardObserver && this.keyboardObserver.off();\n        this.stopPolling();\n        this.viewDestroyed = true;\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild } from '@angular/core';\nimport { CoreCourseModuleMainActivityPage } from '@features/course/classes/main-activity-page';\nimport { AddonModChatIndexComponent } from '../../components/index/index';\n\n/**\n * Page that displays a chat.\n */\n@Component({\n    selector: 'page-addon-mod-chat-index',\n    templateUrl: 'index.html',\n})\nexport class AddonModChatIndexPage extends CoreCourseModuleMainActivityPage<AddonModChatIndexComponent> {\n\n    @ViewChild(AddonModChatIndexComponent) activityComponent?: AddonModChatIndexComponent;\n\n}\n","export default \"/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/*\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/*\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n * Extracted from ionic.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host ion-content {\\n  --background: var(--background-alternative);\\n}\\n:host ion-content::part(scroll) {\\n  padding-bottom: 0 !important;\\n}\\n:host .addon-messages-discussion-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding-bottom: 15px;\\n  background: var(--background-alternative);\\n}\\n:host .addon-messages-date {\\n  font-weight: normal;\\n  font-size: 0.9rem;\\n}\\n:host ion-item.addon-message {\\n  border: 0;\\n  border-radius: 4px;\\n  padding: 0 8px 0 8px;\\n  margin: 10px 8px 0 8px;\\n  --background: var(--addon-messages-message-bg);\\n  background: var(--background);\\n  align-self: flex-start;\\n  width: 90%;\\n  max-width: 90%;\\n  --min-height: var(--a11y-min-target-size);\\n  position: relative;\\n  transition: width 500ms ease-in-out;\\n  overflow: visible;\\n}\\n:host ion-item.addon-message::part(native) {\\n  --inner-border-width: 0;\\n  --inner-padding-end: 0;\\n  padding: 0;\\n  margin: 0;\\n}\\n:host ion-item.addon-message core-format-text > p:only-child {\\n  display: inline;\\n}\\n:host ion-item.addon-message .addon-message-user {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 0.5rem;\\n  margin-top: 0;\\n  color: var(--ion-text-color);\\n}\\n:host ion-item.addon-message .addon-message-user core-user-avatar {\\n  display: block;\\n  --core-avatar-size: var(--addon-messages-avatar-size);\\n  margin: 0;\\n}\\n:host ion-item.addon-message .addon-message-user div {\\n  font-weight: 500;\\n  flex-grow: 1;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message .addon-message-user div {\\n    padding-left: unset;\\n    padding-right: unset;\\n    -webkit-padding-start: 0.5rem;\\n    padding-inline-start: 0.5rem;\\n    -webkit-padding-end: 0.5rem;\\n    padding-inline-end: 0.5rem;\\n  }\\n}\\n:host ion-item.addon-message ion-note {\\n  color: var(--addon-messages-message-note-text);\\n  font-size: var(--addon-messages-message-note-font-size);\\n  margin: 0;\\n  padding: 0 0 8px 0;\\n  align-self: flex-end;\\n}\\n:host ion-item.addon-message[tappable]:active {\\n  --background: var(--addon-messages-message-activated-bg);\\n}\\n:host ion-item.addon-message ion-label {\\n  margin: 0;\\n  padding: 8px 0;\\n}\\n:host ion-item.addon-message .addon-message-text {\\n  display: inline-flex;\\n}\\n:host ion-item.addon-message .addon-message-text * {\\n  color: var(--ion-text-color);\\n}\\n:host ion-item.addon-message .tail {\\n  content: \\\"\\\";\\n  width: 0;\\n  height: 0;\\n  border: 0.5rem solid transparent;\\n  position: absolute;\\n  touch-action: none;\\n  bottom: 0;\\n}\\n:host ion-item.addon-message.addon-message-mine {\\n  --background: var(--addon-messages-message-mine-bg);\\n  align-self: flex-end;\\n}\\n:host ion-item.addon-message.addon-message-mine[tappable]:active {\\n  --background: var(--addon-messages-message-mine-activated-bg);\\n}\\n:host ion-item.addon-message.addon-message-mine .spinner {\\n  float: right;\\n  margin-left: 5px;\\n  margin-right: -3px;\\n  margin-top: 2px;\\n  margin-bottom: -2px;\\n}\\n[dir=rtl] :host ion-item.addon-message.addon-message-mine .spinner {\\n  float: left;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message.addon-message-mine .spinner {\\n    margin-left: unset;\\n    margin-right: unset;\\n    -webkit-margin-start: 5px;\\n    margin-inline-start: 5px;\\n    -webkit-margin-end: -3px;\\n    margin-inline-end: -3px;\\n  }\\n}\\n:host ion-item.addon-message.addon-message-mine .spinner svg {\\n  width: 16px;\\n  height: 16px;\\n}\\n:host ion-item.addon-message.addon-message-mine .tail {\\n  right: -8px;\\n  margin-right: -0.5rem;\\n  border-bottom-color: var(--addon-messages-message-mine-bg);\\n}\\n[dir=rtl] :host ion-item.addon-message.addon-message-mine .tail {\\n  left: unset;\\n  right: unset;\\n  left: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message.addon-message-mine .tail {\\n    margin-right: unset;\\n    -webkit-margin-end: -0.5rem;\\n    margin-inline-end: -0.5rem;\\n  }\\n}\\n:host ion-item.addon-message.addon-message-mine[tappable]:active .tail {\\n  border-bottom-color: var(--addon-messages-message-mine-activated-bg);\\n}\\n:host ion-item.addon-message.addon-message-not-mine .tail {\\n  border-bottom-color: var(--addon-messages-message-bg);\\n  left: -8px;\\n  margin-left: -0.5rem;\\n}\\n[dir=rtl] :host ion-item.addon-message.addon-message-not-mine .tail {\\n  left: unset;\\n  right: unset;\\n  right: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message.addon-message-not-mine .tail {\\n    margin-left: unset;\\n    -webkit-margin-start: -0.5rem;\\n    margin-inline-start: -0.5rem;\\n  }\\n}\\n:host ion-item.addon-message[tappable].addon-message-not-mine.activated .tail {\\n  border-bottom-color: var(--addon-messages-message-activated-bg);\\n}\\n:host ion-item.addon-message .addon-messages-delete-button {\\n  min-height: initial;\\n  line-height: initial;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  height: var(--a11y-min-target-size) !important;\\n  align-self: flex-end;\\n}\\n:host ion-item.addon-message .addon-messages-delete-button ion-icon {\\n  font-size: 1.4em;\\n  line-height: initial;\\n  color: var(--ion-color-danger);\\n}\\n:host ion-item.addon-message.addon-message-no-user {\\n  margin-top: 8px;\\n}\\n:host ion-item.addon-message.addon-message-mine + ion-item.addon-message.addon-message-no-user.addon-message-mine,\\n:host ion-item.addon-message.addon-message-not-mine + ion-item.addon-message.addon-message-no-user.addon-message-not-mine {\\n  padding-top: 0;\\n}\\n:host ion-item.addon-message.addon-message-mine + ion-item.addon-message.addon-message-no-user.addon-message-mine .item-heading,\\n:host ion-item.addon-message.addon-message-not-mine + ion-item.addon-message.addon-message-no-user.addon-message-not-mine .item-heading {\\n  margin-bottom: 0;\\n}\\n:host-context(.ios) ion-footer .toolbar:last-child {\\n  padding-bottom: 4px;\\n  min-height: 0;\\n}\\n:host .addon-mod_chat-notice {\\n  margin-top: 8px;\\n  margin-bottom: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreUser } from '@features/user/services/user';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModChat } from '../../services/chat';\nimport { AddonModChatFormattedSessionMessage, AddonModChatHelper } from '../../services/chat-helper';\n\n/**\n * Page that displays list of chat session messages.\n */\n@Component({\n    selector: 'page-addon-mod-chat-session-messages',\n    templateUrl: 'session-messages.html',\n    styleUrls: ['session-messages.scss'],\n})\nexport class AddonModChatSessionMessagesPage implements OnInit {\n\n    currentUserId!: number;\n    cmId!: number;\n    messages: AddonModChatFormattedSessionMessage[] = [];\n    loaded = false;\n    courseId!: number;\n\n    protected chatId!: number;\n    protected sessionStart!: number;\n    protected sessionEnd!: number;\n    protected groupId!: number;\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId')!;\n        this.sessionStart = CoreNavigator.getRouteNumberParam('sessionStart')!;\n        this.sessionEnd = CoreNavigator.getRouteNumberParam('sessionEnd')!;\n        this.chatId = CoreNavigator.getRouteNumberParam('chatId')!;\n        this.groupId = CoreNavigator.getRouteNumberParam('groupId') || 0;\n\n        this.currentUserId = CoreSites.getCurrentSiteUserId();\n\n        this.fetchMessages();\n    }\n\n    /**\n     * Fetch session messages.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchMessages(): Promise<void> {\n        try {\n            const messages = await AddonModChat.getSessionMessages(\n                this.chatId,\n                this.sessionStart,\n                this.sessionEnd,\n                this.groupId,\n                { cmId: this.cmId },\n            );\n\n            this.messages = await AddonModChat.getMessagesUserData(messages, this.courseId);\n\n            // Calculate which messages need to display the date or user data.\n            for (let index = 0 ; index < this.messages.length; index++) {\n                const prevMessage = index > 0 ? this.messages[index - 1] : undefined;\n\n                this.messages[index] = AddonModChatHelper.formatMessage(this.currentUserId, this.messages[index], prevMessage);\n\n                const message = this.messages[index];\n\n                if (message.beep && message.beep != String(this.currentUserId)) {\n                    this.loadMessageBeepWho(message);\n                }\n            }\n\n            this.messages[this.messages.length - 1].showTail = true;\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.errorloadingcontent', true);\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    protected async loadMessageBeepWho(message: AddonModChatFormattedSessionMessage): Promise<void> {\n        message.beepWho = await this.getUserFullname(message.beep!);\n    }\n\n    /**\n     * Get the user fullname for a beep.\n     *\n     * @param id User Id before parsing.\n     * @return User fullname.\n     */\n    protected async getUserFullname(id: string): Promise<string> {\n        const idNumber = parseInt(id, 10);\n\n        if (isNaN(idNumber)) {\n            return id;\n        }\n\n        try {\n            const user = await CoreUser.getProfile(idNumber, this.courseId, true);\n\n            return user.fullname;\n        } catch {\n            // Error getting profile.\n            return id;\n        }\n    }\n\n    /**\n     * Refresh session messages.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshMessages(refresher: IonRefresher): Promise<void> {\n        try {\n            await CoreUtils.ignoreErrors(AddonModChat.invalidateSessionMessages(this.chatId, this.sessionStart, this.groupId));\n\n            await this.fetchMessages();\n        } finally {\n            refresher.complete();\n        }\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { CorePageItemsListManager } from '@classes/page-items-list-manager';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreUser } from '@features/user/services/user';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreGroupInfo, CoreGroups } from '@services/groups';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { AddonModChat, AddonModChatSession, AddonModChatSessionUser } from '../../services/chat';\n\n/**\n * Page that displays list of chat sessions.\n */\n@Component({\n    selector: 'page-addon-mod-chat-sessions',\n    templateUrl: 'sessions.html',\n})\nexport class AddonModChatSessionsPage implements AfterViewInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    sessions!: AddonChatSessionsManager;\n    showAll = false;\n    groupId = 0;\n    groupInfo?: CoreGroupInfo;\n\n    protected courseId!: number;\n    protected cmId!: number;\n    protected chatId!: number;\n\n    constructor() {\n        this.sessions = new AddonChatSessionsManager(AddonModChatSessionsPage);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId')!;\n        this.chatId = CoreNavigator.getRouteNumberParam('chatId')!;\n        this.sessions.setChatId(this.chatId);\n\n        await this.fetchSessions();\n\n        this.sessions.start(this.splitView);\n    }\n\n    /**\n     * Fetch chat sessions.\n     *\n     * @param showLoading Display a loading modal.\n     * @return Promise resolved when done.\n     */\n    async fetchSessions(showLoading?: boolean): Promise<void> {\n        const modal = showLoading ? await CoreDomUtils.showModalLoading() : null;\n\n        try {\n            this.groupInfo = await CoreGroups.getActivityGroupInfo(this.cmId, false);\n\n            this.groupId = CoreGroups.validateGroupId(this.groupId, this.groupInfo);\n            this.sessions.setGroupId(this.groupId);\n\n            const sessions = await AddonModChat.getSessions(this.chatId, this.groupId, this.showAll, { cmId: this.cmId });\n\n            // Fetch user profiles.\n            const promises: Promise<unknown>[] = [];\n\n            const formattedSessions = sessions.map((session: AddonModChatSessionFormatted) => {\n                session.duration = session.sessionend - session.sessionstart;\n                session.sessionusers.forEach((sessionUser) => {\n                    // The WS does not return the user name, fetch user profile.\n                    promises.push(this.loadUserFullname(sessionUser));\n                });\n\n                // If session has more than 4 users we display a \"Show more\" link.\n                session.allsessionusers = session.sessionusers;\n                if (session.sessionusers.length > 4) {\n                    session.sessionusers = session.allsessionusers.slice(0, 3);\n                }\n\n                return session;\n            });\n\n            await Promise.all(promises);\n\n            this.sessions.setItems(formattedSessions);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.errorloadingcontent', true);\n        } finally {\n            modal?.dismiss();\n        }\n    }\n\n    /**\n     * Load the fullname of a user.\n     *\n     * @param id User ID.\n     * @return Promise resolved when done.\n     */\n    protected async loadUserFullname(sessionUser: AddonModChatUserSessionFormatted): Promise<void> {\n        if (sessionUser.userfullname) {\n            return;\n        }\n\n        try {\n            const user = await CoreUser.getProfile(sessionUser.userid, this.courseId, true);\n\n            sessionUser.userfullname = user.fullname;\n        } catch {\n            // Error getting profile, most probably the user is deleted.\n            sessionUser.userfullname = Translate.instant('core.deleteduser') + ' ' + sessionUser.userid;\n        }\n    }\n\n    /**\n     * Refresh chat sessions.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshSessions(refresher: IonRefresher): Promise<void> {\n        try {\n            await CoreUtils.ignoreErrors(CoreUtils.allPromises([\n                CoreGroups.invalidateActivityGroupInfo(this.cmId),\n                AddonModChat.invalidateSessions(this.chatId, this.groupId, this.showAll),\n            ]));\n\n            await this.fetchSessions();\n        } finally {\n            refresher.complete();\n        }\n    }\n\n    /**\n     * Show more session users.\n     *\n     * @param session Chat session.\n     * @param event The event.\n     */\n    showMoreUsers(session: AddonModChatSessionFormatted, event: Event): void {\n        session.sessionusers = session.allsessionusers!;\n        event.stopPropagation();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.sessions.destroy();\n    }\n\n}\n\n/**\n * Helper class to manage sessions.\n */\nclass AddonChatSessionsManager extends CorePageItemsListManager<AddonModChatSessionFormatted> {\n\n    chatId = -1;\n    groupId = 0;\n\n    constructor(pageComponent: unknown) {\n        super(pageComponent);\n    }\n\n    /**\n     * Set chat ID.\n     *\n     * @param chatId Chat ID.\n     */\n    setChatId(chatId: number): void {\n        this.chatId = chatId;\n    }\n\n    /**\n     * Set group ID.\n     *\n     * @param groupId Group ID.\n     */\n    setGroupId(groupId: number): void {\n        this.groupId = groupId;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getItemPath(session: AddonModChatSessionFormatted): string {\n        return `${session.sessionstart}/${session.sessionend}`;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getItemQueryParams(): Params {\n        return {\n            chatId: this.chatId,\n            groupId: this.groupId,\n        };\n    }\n\n}\n\n/**\n * Fields added to chat session in this view.\n */\ntype AddonModChatSessionFormatted = Omit<AddonModChatSession, 'sessionusers'> & {\n    duration?: number; // Session duration.\n    sessionusers: AddonModChatUserSessionFormatted[];\n    allsessionusers?: AddonModChatUserSessionFormatted[]; // All session users.\n};\n\n/**\n * Fields added to user session in this view.\n */\ntype AddonModChatUserSessionFormatted = AddonModChatSessionUser & {\n    userfullname?: string; // User full name.\n};\n"],"sourceRoot":"webpack:///"}