{"version":3,"sources":["./src/core/features/mainmenu/pages/more/more.html","./src/core/features/mainmenu/pages/more/more.module.ts","./src/core/features/mainmenu/pages/more/more.scss","./src/core/features/mainmenu/pages/more/more.ts"],"names":[],"mappings":"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","file":"pages-more-more-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n\\n        <h1><core-format-text [text]=\\\"siteName\\\" contextLevel=\\\"system\\\" [contextInstanceId]=\\\"0\\\"></core-format-text></h1>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <core-loading [hideUntil]=\\\"!loggedOut\\\">\\n        <ion-list>\\n            <ion-item button *ngIf=\\\"siteInfo\\\" class=\\\"ion-text-wrap\\\" core-user-link [userId]=\\\"siteInfo.userid\\\" detail=\\\"true\\\">\\n                <core-user-avatar [user]=\\\"siteInfo\\\" slot=\\\"start\\\"></core-user-avatar>\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{siteInfo.fullname}}</p>\\n                    <p class=\\\"core-moremenu-siteinfo core-moremenu-sitename\\\">\\n                        <core-format-text [text]=\\\"siteName\\\" contextLevel=\\\"system\\\" [contextInstanceId]=\\\"0\\\" [wsNotFiltered]=\\\"true\\\">\\n                        </core-format-text>\\n                    </p>\\n                    <p class=\\\"core-moremenu-siteinfo core-moremenu-siteurl\\\">{{ siteUrl }}</p>\\n                </ion-label>\\n            </ion-item>\\n            <core-spacer></core-spacer>\\n            <ion-item class=\\\"ion-text-center\\\" *ngIf=\\\"(!handlers || !handlers.length) && !handlersLoaded\\\">\\n                <ion-label><ion-spinner [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner></ion-label>\\n            </ion-item>\\n            <ion-item button *ngFor=\\\"let handler of handlers\\\" [ngClass]=\\\"['core-moremenu-handler', handler.class || '']\\\"\\n                (click)=\\\"openHandler(handler)\\\" [attr.aria-label]=\\\"handler.title | translate\\\" detail=\\\"true\\\">\\n                <ion-icon [name]=\\\"handler.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{ handler.title | translate}}</p>\\n                </ion-label>\\n                <ion-badge slot=\\\"end\\\" *ngIf=\\\"handler.showBadge\\\" [hidden]=\\\"handler.loading || !handler.badge\\\" aria-hidden=\\\"true\\\">\\n                    {{handler.badge}}\\n                </ion-badge>\\n                <span *ngIf=\\\"handler.showBadge && handler.badge && handler.badgeA11yText\\\" class=\\\"sr-only\\\">\\n                    {{ handler.badgeA11yText | translate: {$a : handler.badge } }}\\n                </span>\\n                <ion-spinner slot=\\\"end\\\" *ngIf=\\\"handler.showBadge && handler.loading\\\" [attr.aria-label]=\\\"'core.loading' | translate\\\">\\n                </ion-spinner>\\n            </ion-item>\\n            <ng-container *ngFor=\\\"let item of customItems\\\">\\n                <ion-item button *ngIf=\\\"item.type != 'embedded'\\\" [href]=\\\"item.url\\\" [attr.aria-label]=\\\"item.label\\\" core-link\\n                    [capture]=\\\"item.type == 'app'\\\" [inApp]=\\\"item.type == 'inappbrowser'\\\" class=\\\"core-moremenu-customitem\\\" detail=\\\"true\\\"\\n                    [detailIcon]=\\\"item.type == 'browser' ? 'open-outline' : 'chevron-forward'\\\">\\n                    <ion-icon [name]=\\\"item.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                    <ion-label>\\n                        <p class=\\\"item-heading\\\">{{item.label}}</p>\\n                    </ion-label>\\n                </ion-item>\\n                <ion-item button *ngIf=\\\"item.type == 'embedded'\\\" (click)=\\\"openItem(item)\\\" [attr.aria-label]=\\\"item.label\\\"\\n                    class=\\\"core-moremenu-customitem\\\" detail=\\\"true\\\">\\n                    <ion-icon [name]=\\\"item.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                    <ion-label>\\n                        <p class=\\\"item-heading\\\">{{item.label}}</p>\\n                    </ion-label>\\n                </ion-item>\\n            </ng-container>\\n            <ion-item button *ngIf=\\\"showScanQR\\\" (click)=\\\"scanQR()\\\" detail=\\\"true\\\">\\n                <ion-icon name=\\\"fas-qrcode\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{ 'core.scanqr' | translate }}</p>\\n                </ion-label>\\n            </ion-item>\\n            <ion-item button *ngIf=\\\"showWeb && siteInfo\\\" [href]=\\\"siteInfo.siteurl\\\" core-link autoLogin=\\\"yes\\\"\\n                [attr.aria-label]=\\\"'core.mainmenu.website' | translate\\\" detail=\\\"true\\\" detailIcon=\\\"open-outline\\\">\\n                <ion-icon name=\\\"fas-globe\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{ 'core.mainmenu.website' | translate }}</p>\\n                </ion-label>\\n            </ion-item>\\n            <ion-item button *ngIf=\\\"showHelp\\\" [href]=\\\"docsUrl\\\" core-link autoLogin=\\\"no\\\"\\n                [attr.aria-label]=\\\"'core.mainmenu.help' | translate\\\" detail=\\\"true\\\" detailIcon=\\\"open-outline\\\">\\n                <ion-icon name=\\\"far-life-ring\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{ 'core.mainmenu.help' | translate }}</p>\\n                </ion-label>\\n            </ion-item>\\n            <ion-item button (click)=\\\"openPreferences()\\\" [attr.aria-label]=\\\"'core.settings.preferences' | translate\\\" detail=\\\"true\\\">\\n                <ion-icon name=\\\"fas-wrench\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{ 'core.settings.preferences' | translate }}</p>\\n                </ion-label>\\n            </ion-item>\\n            <ion-item button (click)=\\\"logout()\\\" [attr.aria-label]=\\\"logoutLabel | translate\\\" detail=\\\"true\\\">\\n                <ion-icon name=\\\"fas-sign-out-alt\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{ logoutLabel | translate }}</p>\\n                </ion-label>\\n            </ion-item>\\n            <core-spacer></core-spacer>\\n            <ion-item button (click)=\\\"openSettings()\\\" [attr.aria-label]=\\\"'core.settings.appsettings' | translate\\\" detail=\\\"true\\\">\\n                <ion-icon name=\\\"fas-cogs\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{ 'core.settings.appsettings' | translate }}</p>\\n                </ion-label>\\n            </ion-item>\\n        </ion-list>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule, ROUTES } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreMainMenuMorePage } from './more';\nimport { buildTabMainRoutes } from '@features/mainmenu/mainmenu-tab-routing.module';\nimport { CoreMainMenuProvider } from '@features/mainmenu/services/mainmenu';\n\n@NgModule({\n    imports: [\n        CoreSharedModule,\n    ],\n    providers: [\n        {\n            provide: ROUTES,\n            multi: true,\n            deps: [Injector],\n            useFactory: (injector: Injector) => buildTabMainRoutes(injector, {\n                component: CoreMainMenuMorePage,\n                data: {\n                    mainMenuTabRoot: CoreMainMenuProvider.MORE_PAGE_NAME,\n                },\n            }),\n        },\n    ],\n    declarations: [\n        CoreMainMenuMorePage,\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class CoreMainMenuMorePageModule {}\n","export default \"/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/*\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/*\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n * Extracted from ionic.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\nion-item {\\n  --border-color: var(--core-more-item-border,\\n         var(--ion-item-border-color,\\n         var(--ion-border-color,\\n         var(--ion-color-step-150,\\n         rgba(0, 0, 0, 0.13)))));\\n}\\nion-item ion-icon {\\n  color: var(--core-more-icon, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54));\\n}\\n:host-context(ion-app.ios) ion-item ion-icon {\\n  color: var(--core-more-icon, inherit);\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreSiteInfo } from '@classes/site';\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreMainMenuDelegate, CoreMainMenuHandlerData } from '../../services/mainmenu-delegate';\nimport { CoreMainMenu, CoreMainMenuCustomItem } from '../../services/mainmenu';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreCustomURLSchemes } from '@services/urlschemes';\nimport { CoreContentLinksHelper } from '@features/contentlinks/services/contentlinks-helper';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { Translate } from '@singletons';\n\n/**\n * Page that displays the main menu of the app.\n */\n@Component({\n    selector: 'page-core-mainmenu-more',\n    templateUrl: 'more.html',\n    styleUrls: ['more.scss'],\n})\nexport class CoreMainMenuMorePage implements OnInit, OnDestroy {\n\n    handlers?: CoreMainMenuHandlerData[];\n    allHandlers?: CoreMainMenuHandlerData[];\n    handlersLoaded = false;\n    siteInfo?: CoreSiteInfo;\n    siteName?: string;\n    logoutLabel = 'core.mainmenu.changesite';\n    showScanQR: boolean;\n    showWeb?: boolean;\n    showHelp?: boolean;\n    docsUrl?: string;\n    customItems?: CoreMainMenuCustomItem[];\n    siteUrl?: string;\n    loggedOut = false;\n\n    protected subscription!: Subscription;\n    protected langObserver: CoreEventObserver;\n    protected updateSiteObserver: CoreEventObserver;\n\n    constructor() {\n\n        this.langObserver = CoreEvents.on(CoreEvents.LANGUAGE_CHANGED, this.loadSiteInfo.bind(this));\n        this.updateSiteObserver = CoreEvents.on(\n            CoreEvents.SITE_UPDATED,\n            this.loadSiteInfo.bind(this),\n            CoreSites.getCurrentSiteId(),\n        );\n        this.loadSiteInfo();\n        this.showScanQR = CoreUtils.canScanQR() &&\n                !CoreSites.getCurrentSite()?.isFeatureDisabled('CoreMainMenuDelegate_QrReader');\n    }\n\n    /**\n     * Initialize component.\n     */\n    ngOnInit(): void {\n        // Load the handlers.\n        this.subscription = CoreMainMenuDelegate.getHandlersObservable().subscribe((handlers) => {\n            this.allHandlers = handlers;\n\n            this.initHandlers();\n        });\n\n        window.addEventListener('resize', this.initHandlers.bind(this));\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        window.removeEventListener('resize', this.initHandlers.bind(this));\n        this.langObserver?.off();\n        this.updateSiteObserver?.off();\n        this.subscription?.unsubscribe();\n    }\n\n    /**\n     * Init handlers on change (size or handlers).\n     */\n    initHandlers(): void {\n        if (!this.allHandlers) {\n            return;\n        }\n\n        // Calculate the main handlers not to display them in this view.\n        const mainHandlers = this.allHandlers\n            .filter((handler) => !handler.onlyInMore)\n            .slice(0, CoreMainMenu.getNumItems());\n\n        // Get only the handlers that don't appear in the main view.\n        this.handlers = this.allHandlers.filter((handler) => mainHandlers.indexOf(handler) == -1);\n\n        this.handlersLoaded = CoreMainMenuDelegate.areHandlersLoaded();\n    }\n\n    /**\n     * Load the site info required by the view.\n     */\n    protected async loadSiteInfo(): Promise<void> {\n        const currentSite = CoreSites.getCurrentSite();\n\n        if (!currentSite) {\n            return;\n        }\n\n        this.siteInfo = currentSite.getInfo();\n        this.siteName = currentSite.getSiteName();\n        this.siteUrl = currentSite.getURL();\n        this.logoutLabel = CoreLoginHelper.getLogoutLabel(currentSite);\n        this.showWeb = !currentSite.isFeatureDisabled('CoreMainMenuDelegate_website');\n        this.showHelp = !currentSite.isFeatureDisabled('CoreMainMenuDelegate_help');\n\n        this.docsUrl = await currentSite.getDocsUrl();\n\n        this.customItems = await CoreMainMenu.getCustomMenuItems();\n    }\n\n    /**\n     * Open a handler.\n     *\n     * @param handler Handler to open.\n     */\n    openHandler(handler: CoreMainMenuHandlerData): void {\n        const params = handler.pageParams;\n\n        CoreNavigator.navigateToSitePath(handler.page, { params });\n    }\n\n    /**\n     * Open an embedded custom item.\n     *\n     * @param item Item to open.\n     */\n    openItem(item: CoreMainMenuCustomItem): void {\n        CoreNavigator.navigateToSitePath('viewer/iframe', { params: { title: item.label, url: item.url } });\n    }\n\n    /**\n     * Open preferences.\n     */\n    openPreferences(): void {\n        CoreNavigator.navigateToSitePath('preferences');\n    }\n\n    /**\n     * Open settings.\n     */\n    openSettings(): void {\n        CoreNavigator.navigateToSitePath('settings');\n    }\n\n    /**\n     * Scan and treat a QR code.\n     */\n    async scanQR(): Promise<void> {\n        // Scan for a QR code.\n        const text = await CoreUtils.scanQR();\n\n        if (!text) {\n            return;\n        }\n\n        if (CoreCustomURLSchemes.isCustomURL(text)) {\n            // Is a custom URL scheme, handle it.\n            CoreCustomURLSchemes.handleCustomURL(text).catch((error) => {\n                CoreCustomURLSchemes.treatHandleCustomURLError(error);\n            });\n        } else if (/^[^:]{2,}:\\/\\/[^ ]+$/i.test(text)) { // Check if it's a URL.\n            // Check if the app can handle the URL.\n            const treated = await CoreContentLinksHelper.handleLink(text, undefined, true, true);\n\n            if (!treated) {\n                // Can't handle it, open it in browser.\n                CoreSites.getCurrentSite()?.openInBrowserWithAutoLoginIfSameSite(text);\n            }\n        } else {\n            // It's not a URL, open it in a modal so the user can see it and copy it.\n            CoreTextUtils.viewText(Translate.instant('core.qrscanner'), text, {\n                displayCopyButton: true,\n            });\n        }\n    }\n\n    /**\n     * Logout the user.\n     */\n    logout(): void {\n        this.loggedOut = true;\n        CoreSites.logout();\n    }\n\n}\n"],"sourceRoot":"webpack:///"}